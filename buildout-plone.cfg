#A default Plone buildout. This one was created with paster create -t plone3_buildout and uses 
#http://dist.plone.org/release/4.0b5/

[buildout]
extensions = mr.developer
sources = sources
auto-checkout +=
    plone.app.caching
    plone.cachepurging
    plone.caching
    z3c.caching
    plone.transformchain

parts =
    productdistros
    instance
    zopepy
    varnish
    varnish-config
    varnish-runner
    varnish-chmod

# Change the number here to change the version of Plone being used
extends = 
    http://download.zope.org/Zope2/index/2.12.3/versions.cfg
    http://dist.plone.org/release/4.0b5/versions.cfg

versions = versions

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.0b5/
    http://dist.plone.org/thirdparty
    http://dist.repoze.org/PIL-1.1.6.tar.gz

# Add additional eggs here
eggs =
 PIL
 plone.app.caching

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =


# S E C T I O N S

[sources]
plone.app.caching = svn https://svn.plone.org/svn/plone/plone.app.caching/trunk/
plone.cachepurging = svn https://svn.plone.org/svn/plone/plone.cachepurging/trunk/
plone.caching = svn https://svn.plone.org/svn/plone/plone.caching/trunk/
z3c.caching = svn http://svn.zope.org/repos/main/z3c.caching/trunk/
plone.transformchain = svn https://svn.plone.org/svn/plone/plone.transformchain/trunk/

[versions]
z3c.form = 2.2.0


# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL,
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.
[productdistros]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.distros
recipe = plone.recipe.distros
urls =
nested-packages =
version-suffix-packages =

[instance]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.zope2instance
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
#debug-mode = on
#verbose-security = on
blob-storage = var/blobstorage
# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = Plone my.package
eggs =
    Zope2
    Plone
    ${buildout:eggs}

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =

products =
    ${buildout:directory}/products
    ${productdistros:location}

[zopepy]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/zc.recipe.egg
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy


# V A R N I S H

[varnish]
recipe = zc.recipe.cmmi
url = http://sourceforge.net/projects/varnish/files/varnish/2.1.2/varnish-2.1.2.tar.gz/download

[varnish-config]
recipe = collective.recipe.template
input = ${buildout:directory}/src/plone.app.caching/plone/app/caching/proxy-configs/varnish/templates/varnish.vcl.in
output = ${buildout:directory}/etc/varnish.vcl

# misc template variables
backend-host = 127.0.0.1
backend-port = 8080


[varnish-runner]
recipe = collective.recipe.template
input = ${buildout:directory}/src/plone.app.caching/plone/app/caching/proxy-configs/varnish/templates/varnishd.in
output = ${buildout:directory}/bin/varnishd

# misc template variables
daemon = ${varnish:location}/sbin/varnishd
config = ${varnish-config:output}
pid = ${buildout:directory}/var/varnish.pid
bind = 127.0.0.1:8000
storage = ${buildout:directory}/var/storage
cache-size = 1G


[varnish-chmod]
recipe = plone.recipe.command
command = chmod 755 ${varnish-runner:output}
update-command = ${varnish-chmod:command}
